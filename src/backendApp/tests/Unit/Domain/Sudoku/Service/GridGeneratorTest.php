<?php

namespace Tests\Unit\Domain\Sudoku\Service;

use App\Domain\Sudoku\Service\GridGenerator;
use App\Domain\Sudoku\Service\GridShuffler;
use PHPUnit\Framework\Attributes\DataProvider;
use PHPUnit\Framework\TestCase;

class GridGeneratorTest extends TestCase
{
    private GridShuffler $gridShuffler;
    private GridGenerator $gridGenerator;

    protected function setUp(): void
    {
        $this->gridShuffler = $this->createMock(GridShuffler::class);
        $this->gridGenerator = new GridGenerator($this->gridShuffler);
    }

    #[DataProvider('gridSizeProvider')]
    public function testGenerate(int $size, array $groups): void
    {
        // Arrange
        $boxSize = (int)sqrt($size);
        $expectedGrid = [
            'cells' => [],
            'cellGroups' => $groups,
        ];
        for ($row = 0; $row < $size; $row++) {
            for ($col = 0; $col < $size; $col++) {
                $expectedGrid['cells'][$row][$col] = [
                    'value' => $this->getCellValue($row, $col, $size, $boxSize)
                ];
            }
        }

        $shuffledGrid = ['cells' => array_reverse($expectedGrid['cells'])]; // Mock shuffled result
        $this->gridShuffler->expects($this->once())
            ->method('shuffle')
            ->with($expectedGrid, 10)
            ->willReturn($shuffledGrid);

        // Act
        $result = $this->gridGenerator->generate($size);

        // Assert
        $this->assertEquals($shuffledGrid, $result);
    }

    #[DataProvider('invalidGridSizeProvider')]
    public function testGenerateWithInvalidSize(int $size): void
    {
        $this->expectException(\InvalidArgumentException::class);
        $this->expectExceptionMessage('Grid size must be a perfect square number');

        $this->gridGenerator->generate($size);
    }

    public function testGeneratedGridIsValid(): void
    {
        // Arrange
        $this->gridShuffler->method('shuffle')->willReturnArgument(0);

        // Act
        $result = $this->gridGenerator->generate();

        // Assert
        $this->assertGridIsValid($result, 9);
    }

    public static function gridSizeProvider(): array
    {
        return [
            'Small 4x4 grid' => [4, json_decode('[{"id":1,"cells":["1:1","1:2","1:3","1:4"],"type":"ROW"},{"id":2,"cells":["2:1","2:2","2:3","2:4"],"type":"ROW"},{"id":3,"cells":["3:1","3:2","3:3","3:4"],"type":"ROW"},{"id":4,"cells":["4:1","4:2","4:3","4:4"],"type":"ROW"},{"id":5,"cells":["1:1","2:1","3:1","4:1"],"type":"COL"},{"id":6,"cells":["1:2","2:2","3:2","4:2"],"type":"COL"},{"id":7,"cells":["1:3","2:3","3:3","4:3"],"type":"COL"},{"id":8,"cells":["1:4","2:4","3:4","4:4"],"type":"COL"},{"id":9,"cells":["1:1","1:2","2:1","2:2"],"type":"BLC"},{"id":10,"cells":["1:3","1:4","2:3","2:4"],"type":"BLC"},{"id":11,"cells":["3:1","3:2","4:1","4:2"],"type":"BLC"},{"id":12,"cells":["3:3","3:4","4:3","4:4"],"type":"BLC"}]', true)],
            'Standard 9x9 grid' => [9, json_decode('[{"id":1,"cells":["1:1","1:2","1:3","1:4","1:5","1:6","1:7","1:8","1:9"],"type":"ROW"},{"id":2,"cells":["2:1","2:2","2:3","2:4","2:5","2:6","2:7","2:8","2:9"],"type":"ROW"},{"id":3,"cells":["3:1","3:2","3:3","3:4","3:5","3:6","3:7","3:8","3:9"],"type":"ROW"},{"id":4,"cells":["4:1","4:2","4:3","4:4","4:5","4:6","4:7","4:8","4:9"],"type":"ROW"},{"id":5,"cells":["5:1","5:2","5:3","5:4","5:5","5:6","5:7","5:8","5:9"],"type":"ROW"},{"id":6,"cells":["6:1","6:2","6:3","6:4","6:5","6:6","6:7","6:8","6:9"],"type":"ROW"},{"id":7,"cells":["7:1","7:2","7:3","7:4","7:5","7:6","7:7","7:8","7:9"],"type":"ROW"},{"id":8,"cells":["8:1","8:2","8:3","8:4","8:5","8:6","8:7","8:8","8:9"],"type":"ROW"},{"id":9,"cells":["9:1","9:2","9:3","9:4","9:5","9:6","9:7","9:8","9:9"],"type":"ROW"},{"id":10,"cells":["1:1","2:1","3:1","4:1","5:1","6:1","7:1","8:1","9:1"],"type":"COL"},{"id":11,"cells":["1:2","2:2","3:2","4:2","5:2","6:2","7:2","8:2","9:2"],"type":"COL"},{"id":12,"cells":["1:3","2:3","3:3","4:3","5:3","6:3","7:3","8:3","9:3"],"type":"COL"},{"id":13,"cells":["1:4","2:4","3:4","4:4","5:4","6:4","7:4","8:4","9:4"],"type":"COL"},{"id":14,"cells":["1:5","2:5","3:5","4:5","5:5","6:5","7:5","8:5","9:5"],"type":"COL"},{"id":15,"cells":["1:6","2:6","3:6","4:6","5:6","6:6","7:6","8:6","9:6"],"type":"COL"},{"id":16,"cells":["1:7","2:7","3:7","4:7","5:7","6:7","7:7","8:7","9:7"],"type":"COL"},{"id":17,"cells":["1:8","2:8","3:8","4:8","5:8","6:8","7:8","8:8","9:8"],"type":"COL"},{"id":18,"cells":["1:9","2:9","3:9","4:9","5:9","6:9","7:9","8:9","9:9"],"type":"COL"},{"id":19,"cells":["1:1","1:2","1:3","2:1","2:2","2:3","3:1","3:2","3:3"],"type":"BLC"},{"id":20,"cells":["1:4","1:5","1:6","2:4","2:5","2:6","3:4","3:5","3:6"],"type":"BLC"},{"id":21,"cells":["1:7","1:8","1:9","2:7","2:8","2:9","3:7","3:8","3:9"],"type":"BLC"},{"id":22,"cells":["4:1","4:2","4:3","5:1","5:2","5:3","6:1","6:2","6:3"],"type":"BLC"},{"id":23,"cells":["4:4","4:5","4:6","5:4","5:5","5:6","6:4","6:5","6:6"],"type":"BLC"},{"id":24,"cells":["4:7","4:8","4:9","5:7","5:8","5:9","6:7","6:8","6:9"],"type":"BLC"},{"id":25,"cells":["7:1","7:2","7:3","8:1","8:2","8:3","9:1","9:2","9:3"],"type":"BLC"},{"id":26,"cells":["7:4","7:5","7:6","8:4","8:5","8:6","9:4","9:5","9:6"],"type":"BLC"},{"id":27,"cells":["7:7","7:8","7:9","8:7","8:8","8:9","9:7","9:8","9:9"],"type":"BLC"}]', true)],
            'Large 16x16 grid' => [16, json_decode('[{"id":1,"cells":["1:1","1:2","1:3","1:4","1:5","1:6","1:7","1:8","1:9","1:10","1:11","1:12","1:13","1:14","1:15","1:16"],"type":"ROW"},{"id":2,"cells":["2:1","2:2","2:3","2:4","2:5","2:6","2:7","2:8","2:9","2:10","2:11","2:12","2:13","2:14","2:15","2:16"],"type":"ROW"},{"id":3,"cells":["3:1","3:2","3:3","3:4","3:5","3:6","3:7","3:8","3:9","3:10","3:11","3:12","3:13","3:14","3:15","3:16"],"type":"ROW"},{"id":4,"cells":["4:1","4:2","4:3","4:4","4:5","4:6","4:7","4:8","4:9","4:10","4:11","4:12","4:13","4:14","4:15","4:16"],"type":"ROW"},{"id":5,"cells":["5:1","5:2","5:3","5:4","5:5","5:6","5:7","5:8","5:9","5:10","5:11","5:12","5:13","5:14","5:15","5:16"],"type":"ROW"},{"id":6,"cells":["6:1","6:2","6:3","6:4","6:5","6:6","6:7","6:8","6:9","6:10","6:11","6:12","6:13","6:14","6:15","6:16"],"type":"ROW"},{"id":7,"cells":["7:1","7:2","7:3","7:4","7:5","7:6","7:7","7:8","7:9","7:10","7:11","7:12","7:13","7:14","7:15","7:16"],"type":"ROW"},{"id":8,"cells":["8:1","8:2","8:3","8:4","8:5","8:6","8:7","8:8","8:9","8:10","8:11","8:12","8:13","8:14","8:15","8:16"],"type":"ROW"},{"id":9,"cells":["9:1","9:2","9:3","9:4","9:5","9:6","9:7","9:8","9:9","9:10","9:11","9:12","9:13","9:14","9:15","9:16"],"type":"ROW"},{"id":10,"cells":["10:1","10:2","10:3","10:4","10:5","10:6","10:7","10:8","10:9","10:10","10:11","10:12","10:13","10:14","10:15","10:16"],"type":"ROW"},{"id":11,"cells":["11:1","11:2","11:3","11:4","11:5","11:6","11:7","11:8","11:9","11:10","11:11","11:12","11:13","11:14","11:15","11:16"],"type":"ROW"},{"id":12,"cells":["12:1","12:2","12:3","12:4","12:5","12:6","12:7","12:8","12:9","12:10","12:11","12:12","12:13","12:14","12:15","12:16"],"type":"ROW"},{"id":13,"cells":["13:1","13:2","13:3","13:4","13:5","13:6","13:7","13:8","13:9","13:10","13:11","13:12","13:13","13:14","13:15","13:16"],"type":"ROW"},{"id":14,"cells":["14:1","14:2","14:3","14:4","14:5","14:6","14:7","14:8","14:9","14:10","14:11","14:12","14:13","14:14","14:15","14:16"],"type":"ROW"},{"id":15,"cells":["15:1","15:2","15:3","15:4","15:5","15:6","15:7","15:8","15:9","15:10","15:11","15:12","15:13","15:14","15:15","15:16"],"type":"ROW"},{"id":16,"cells":["16:1","16:2","16:3","16:4","16:5","16:6","16:7","16:8","16:9","16:10","16:11","16:12","16:13","16:14","16:15","16:16"],"type":"ROW"},{"id":17,"cells":["1:1","2:1","3:1","4:1","5:1","6:1","7:1","8:1","9:1","10:1","11:1","12:1","13:1","14:1","15:1","16:1"],"type":"COL"},{"id":18,"cells":["1:2","2:2","3:2","4:2","5:2","6:2","7:2","8:2","9:2","10:2","11:2","12:2","13:2","14:2","15:2","16:2"],"type":"COL"},{"id":19,"cells":["1:3","2:3","3:3","4:3","5:3","6:3","7:3","8:3","9:3","10:3","11:3","12:3","13:3","14:3","15:3","16:3"],"type":"COL"},{"id":20,"cells":["1:4","2:4","3:4","4:4","5:4","6:4","7:4","8:4","9:4","10:4","11:4","12:4","13:4","14:4","15:4","16:4"],"type":"COL"},{"id":21,"cells":["1:5","2:5","3:5","4:5","5:5","6:5","7:5","8:5","9:5","10:5","11:5","12:5","13:5","14:5","15:5","16:5"],"type":"COL"},{"id":22,"cells":["1:6","2:6","3:6","4:6","5:6","6:6","7:6","8:6","9:6","10:6","11:6","12:6","13:6","14:6","15:6","16:6"],"type":"COL"},{"id":23,"cells":["1:7","2:7","3:7","4:7","5:7","6:7","7:7","8:7","9:7","10:7","11:7","12:7","13:7","14:7","15:7","16:7"],"type":"COL"},{"id":24,"cells":["1:8","2:8","3:8","4:8","5:8","6:8","7:8","8:8","9:8","10:8","11:8","12:8","13:8","14:8","15:8","16:8"],"type":"COL"},{"id":25,"cells":["1:9","2:9","3:9","4:9","5:9","6:9","7:9","8:9","9:9","10:9","11:9","12:9","13:9","14:9","15:9","16:9"],"type":"COL"},{"id":26,"cells":["1:10","2:10","3:10","4:10","5:10","6:10","7:10","8:10","9:10","10:10","11:10","12:10","13:10","14:10","15:10","16:10"],"type":"COL"},{"id":27,"cells":["1:11","2:11","3:11","4:11","5:11","6:11","7:11","8:11","9:11","10:11","11:11","12:11","13:11","14:11","15:11","16:11"],"type":"COL"},{"id":28,"cells":["1:12","2:12","3:12","4:12","5:12","6:12","7:12","8:12","9:12","10:12","11:12","12:12","13:12","14:12","15:12","16:12"],"type":"COL"},{"id":29,"cells":["1:13","2:13","3:13","4:13","5:13","6:13","7:13","8:13","9:13","10:13","11:13","12:13","13:13","14:13","15:13","16:13"],"type":"COL"},{"id":30,"cells":["1:14","2:14","3:14","4:14","5:14","6:14","7:14","8:14","9:14","10:14","11:14","12:14","13:14","14:14","15:14","16:14"],"type":"COL"},{"id":31,"cells":["1:15","2:15","3:15","4:15","5:15","6:15","7:15","8:15","9:15","10:15","11:15","12:15","13:15","14:15","15:15","16:15"],"type":"COL"},{"id":32,"cells":["1:16","2:16","3:16","4:16","5:16","6:16","7:16","8:16","9:16","10:16","11:16","12:16","13:16","14:16","15:16","16:16"],"type":"COL"},{"id":33,"cells":["1:1","1:2","1:3","1:4","2:1","2:2","2:3","2:4","3:1","3:2","3:3","3:4","4:1","4:2","4:3","4:4"],"type":"BLC"},{"id":34,"cells":["1:5","1:6","1:7","1:8","2:5","2:6","2:7","2:8","3:5","3:6","3:7","3:8","4:5","4:6","4:7","4:8"],"type":"BLC"},{"id":35,"cells":["1:9","1:10","1:11","1:12","2:9","2:10","2:11","2:12","3:9","3:10","3:11","3:12","4:9","4:10","4:11","4:12"],"type":"BLC"},{"id":36,"cells":["1:13","1:14","1:15","1:16","2:13","2:14","2:15","2:16","3:13","3:14","3:15","3:16","4:13","4:14","4:15","4:16"],"type":"BLC"},{"id":37,"cells":["5:1","5:2","5:3","5:4","6:1","6:2","6:3","6:4","7:1","7:2","7:3","7:4","8:1","8:2","8:3","8:4"],"type":"BLC"},{"id":38,"cells":["5:5","5:6","5:7","5:8","6:5","6:6","6:7","6:8","7:5","7:6","7:7","7:8","8:5","8:6","8:7","8:8"],"type":"BLC"},{"id":39,"cells":["5:9","5:10","5:11","5:12","6:9","6:10","6:11","6:12","7:9","7:10","7:11","7:12","8:9","8:10","8:11","8:12"],"type":"BLC"},{"id":40,"cells":["5:13","5:14","5:15","5:16","6:13","6:14","6:15","6:16","7:13","7:14","7:15","7:16","8:13","8:14","8:15","8:16"],"type":"BLC"},{"id":41,"cells":["9:1","9:2","9:3","9:4","10:1","10:2","10:3","10:4","11:1","11:2","11:3","11:4","12:1","12:2","12:3","12:4"],"type":"BLC"},{"id":42,"cells":["9:5","9:6","9:7","9:8","10:5","10:6","10:7","10:8","11:5","11:6","11:7","11:8","12:5","12:6","12:7","12:8"],"type":"BLC"},{"id":43,"cells":["9:9","9:10","9:11","9:12","10:9","10:10","10:11","10:12","11:9","11:10","11:11","11:12","12:9","12:10","12:11","12:12"],"type":"BLC"},{"id":44,"cells":["9:13","9:14","9:15","9:16","10:13","10:14","10:15","10:16","11:13","11:14","11:15","11:16","12:13","12:14","12:15","12:16"],"type":"BLC"},{"id":45,"cells":["13:1","13:2","13:3","13:4","14:1","14:2","14:3","14:4","15:1","15:2","15:3","15:4","16:1","16:2","16:3","16:4"],"type":"BLC"},{"id":46,"cells":["13:5","13:6","13:7","13:8","14:5","14:6","14:7","14:8","15:5","15:6","15:7","15:8","16:5","16:6","16:7","16:8"],"type":"BLC"},{"id":47,"cells":["13:9","13:10","13:11","13:12","14:9","14:10","14:11","14:12","15:9","15:10","15:11","15:12","16:9","16:10","16:11","16:12"],"type":"BLC"},{"id":48,"cells":["13:13","13:14","13:15","13:16","14:13","14:14","14:15","14:16","15:13","15:14","15:15","15:16","16:13","16:14","16:15","16:16"],"type":"BLC"}]', true)],
        ];
    }

    public static function invalidGridSizeProvider(): array
    {
        return [
            'Zero size' => [0],
            'Negative size' => [-1],
            'Non-perfect-square size' => [10],
        ];
    }

    private function assertGridIsValid(array $grid, int $size): void
    {
        $boxSize = (int)sqrt($size);

        // Check grid structure
        $this->assertArrayHasKey('cells', $grid);
        $this->assertCount($size, $grid['cells']);

        // Check each row
        foreach ($grid['cells'] as $row) {
            $this->assertCount($size, $row);
            $values = array_column($row, 'value');
            sort($values);
            $this->assertEquals(range(1, $size), array_values($values));
        }

        // Check each column
        for ($col = 0; $col < $size; $col++) {
            $values = [];
            for ($row = 0; $row < $size; $row++) {
                $values[] = $grid['cells'][$row][$col]['value'];
            }
            $values = array_unique($values);
            sort($values);
            $this->assertEquals(range(1, $size), array_values($values));
        }

        // Check each box
        for ($boxRow = 0; $boxRow < $boxSize; $boxRow++) {
            for ($boxCol = 0; $boxCol < $boxSize; $boxCol++) {
                $values = [];
                for ($row = $boxRow * $boxSize; $row < ($boxRow + 1) * $boxSize; $row++) {
                    for ($col = $boxCol * $boxSize; $col < ($boxCol + 1) * $boxSize; $col++) {
                        $values[] = $grid['cells'][$row][$col]['value'];
                    }
                }
                $values = array_unique($values);
                sort($values);
                $this->assertEquals(range(1, $size), array_values($values));
            }
        }
    }

    private function getCellValue(int $row, int $col, int $size, int $boxSize): int
    {
        $value = $col;
        $value = ($value + ($row * $boxSize) * 2);
        $value = $value + (floor($row / $boxSize) * ($size - 1));

        $value = ($value % $size) + 1;
        return (int)$value;
    }
}
